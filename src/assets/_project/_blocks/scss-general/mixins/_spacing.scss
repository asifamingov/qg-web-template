// Responsive spacing
// QG addon to allow you to set dynamic padding or margins to elements based on the standard md break.

$default-small: ($qg-spacing-xs);
$default-large: ($qg-spacing);

@mixin qg-responsive-spacing($prop, $small: $default-small, $large: $default-large) {
  // Get defaults
  @if $small == default {
    $small: $default-small;
  }
  @if $large == default {
    $large: $default-large
  }

  // The 'small' breakpoint is dynamic. In this case, it's the smallest size
  @if $small != false {
    #{$prop}: $small;
  }

  // The 'large' breakpoint is dynamic. In this case, on LG
  @if $large != false {
    @media (min-width: $screen-lg-min) {
      #{$prop}: $large;
    }
  }
}

// Margin
@mixin qg-responsive-margin ($propExt: false) {
  $prop: 'margin';
  @if $propExt != false {
    $prop: $prop + '-' + $propExt;
  }
  @include qg-responsive-spacing($prop);
}

@mixin qg-responsive-padding ($propExt: false) {
  $prop: 'padding';
  @if $propExt != false {
    $prop: $prop + '-' + $propExt;
  }
  @include qg-responsive-spacing($prop);
}

// ### Legacy 2 below ###

// @mixin qg-responsive-spacing($prop, $xs, $sm, $md, $lg) {
  
//   // Set defaults
//   @if $xs == default {
//     $xs: $default-xs;
//   }
//   @if $sm == default {
//     $sm: $default-sm;
//   }
//   @if $md == default {
//     $md: $default-md;
//   }
//   @if $lg == default {
//     $lg: $default-lg;
//   }
  
//   // Set spacing
//   @if $xs != false {
//     #{$prop}: $xs;
//   }
//   @if $sm != false {
//     @media (min-width: $screen-sm-min) {
//       #{$prop}: $sm;
//     }
//   }

//   @if $md != false {
//     @media (min-width: $screen-md-min) {
//       #{$prop}: $md;
//     }
//   }

//   @if $lg != false {
//     @media (min-width: $screen-lg-min) {
//       #{$prop}: $lg;
//     }
//   }
// }

// // Padding
// @mixin qg-responsive-padding ($propExt: false) {
//   $prop: 'padding';
//   @if $propExt != false {
//     $prop: 'padding-' + $propExt;
//   }

//   @include qg-responsive-spacing($prop, default, false, false, default);
// }

// // Margin
// @mixin qg-responsive-margin ($propExt: false) {
//   $prop: 'margin';
//   @if $propExt != false {
//     $prop: 'margin-' + $propExt;
//   }
//   $xs: $default-xs;
//   $lg: $default-lg;
//   @include qg-responsive-spacing($prop, default, false, false, default);
// }


// ### Legacy below ###

// // Padding
// @mixin qg-responsive-padding ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('padding', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-padding-top ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('padding-top', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-padding-right ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('padding-right', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-padding-bottom ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('padding-bottom', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-padding-left ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('padding-left', $xs, $sm, $md, $lg);
// }

// // Margin
// @mixin qg-responsive-margin ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('margin', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-margin-top ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('margin-top', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-margin-right ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('margin-right', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-margin-bottom ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('margin-bottom', $xs, $sm, $md, $lg);
// }
// @mixin qg-responsive-margin-left ($xs: $default-xs, $sm: $xs, $md: $default-md, $lg: $md) {
//   @include qg-responsive-spacing('margin-left', $xs, $sm, $md, $lg);
// }
